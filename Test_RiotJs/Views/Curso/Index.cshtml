@*@model IEnumerable<Entity.Curso>*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="jumbotron">

    <button id="empleado-bulk" class="pull-right btn btn-default">
        <i class="glyphicon glyphicon-list-alt alert-success"></i>
        Registrar Curso
    </button>

</div>

<div id="CursoList"></div>

<curso-modal></curso-modal>
<curso-save-modal></curso-save-modal>

<script src="~/Component?url=CursoView" type="riot/tag">
</script>
<script src="~/Component?url=EmpleadoBulk" type="riot/tag">
</script>


@section scripts{
    <script>
    var data = {
        class: 'table-striped table-bordered table-condensed',
        columnas: [
            { leyenda: '', style: {width:'40px'}, class: 'text-center' },
            {
                leyenda: 'Profesión', style: 'width:200px;', columna: 'Profesion_id', ordenable: true, filtro: function () {
                    return Grid_select({
                        data: [
                            { valor: '', contenido: 'Todos' },
                            { valor: '1', contenido: 'Abogado' },
                            { valor: '2', contenido: 'Bombero' },
                            { valor: '3', contenido: 'Doctor' },
                            { valor: '4', contenido: 'Ingeniero Civil' },
                            { valor: '5', contenido: 'Ingeniero de Sistemas' },
                            { valor: '6', contenido: 'Músico' },
                        ]
                    });
                }
            },
            { leyenda: 'Empleado', class: '', ordenable: true, columna: 'Nombre', filtro: true },
            { leyenda: 'Correo', style: 'width:300px;', ordenable: true, filtro: true, columna: 'Correo' },
            {
                leyenda: 'Sexo', style: 'width:120px;', columna: 'Sexo', filtro: function () {
                    return Grid_select({
                        data: [
                            { valor: '', contenido: 'Todos' },
                            { valor: '1', contenido: 'Masculino' },
                            { valor: '2', contenido: 'Femenino' },
                        ]
                    });
                }
            },
            { leyenda: 'Sueldo', style: 'width:100px;', ordenable: true, columna: 'Sueldo' },
            { leyenda: 'Registro', style: 'width:100px;', ordenable: true, columna: 'FechaRegistro' },
            { leyenda: '', style: 'width:60px;' },
        ],
        modelo: [
            {
                class: 'text-center', formato: function (tr, obj, valor) {
                    return Grid_dropdown({
                        contenido: '<i class="glyphicon glyphicon-cog"></i>',
                        class: 'btn btn-primary btn-xs',
                        target: '_blank',
                        id: 'editar-' + obj.id,
                        data: [
                            { href: '#', contenido: 'Editar' },
                            { href: '#', contenido: 'Eliminar' }
                        ]
                    });
                }
            },
            { propiedad: 'Profesion.Nombre' },
            {
                style: '', class: '', formato: function (tr, obj, valor) {
                    return obj.Nombre + ' ' + obj.Apellido;
                }
            },
            { propiedad: 'Correo' },
            {
                propiedad: 'Sexo', formato: function (tr, obj, valor) {
                    return obj.Sexo == 1 ? 'Masculino' : 'Femenino';
                }
            },
            { propiedad: 'Sueldo', class: 'text-right', },
            { propiedad: 'FechaRegistro', class: 'text-right', },
            {
                propiedad: 'Sexo', formato: function (tr, obj, valor) {
                    return anexGrid_boton({
                        type: 'button',
                        value: obj.id,
                        contenido: 'Ver',
                        class: 'btn-default btn-block btn-xs btn-visualizar'
                    });
                }
            },
        ],
        url: '@Url.Content("~/Curso/Listar")',
        paginable: true,
        filtrable: true,
        limite: [20, 60, 100],
        columna: 'CurIntId',
        columna_orden: 'DESC'
    };

    $(document).ready(function () {
        var grid = $("#list").Grid(data);

        $("#list").on('click', '.btn-visualizar', function () {
            var obj = $(this);

            riot.mount('user-modal', {
                id: obj.val()
            });
        })

        $("#empleado-bulk").click(function () {
            riot.mount('user-bulk-modal');
        })
    })
    </script>
}

@*<h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CursoName)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CursoName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.CurIntId }) |
                @Html.ActionLink("Details", "Details", new { id=item.CurIntId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.CurIntId })
            </td>
        </tr>
    }

    </table>*@
